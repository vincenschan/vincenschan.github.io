name: Deploy to GitHub Pages

on:
  # 当推送到main分支时触发
  push:
    branches: [ main ]
  # 允许手动触发
  workflow_dispatch:

# 设置GITHUB_TOKEN的权限
permissions:
  contents: read
  pages: write
  id-token: write

# 确保同时只有一个部署在运行
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # 自动检测静态站点生成器并配置
          static_site_generator: nuxt
          # 自动启用Pages功能
          enablement: true

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .output
            .nuxt
            ~/.npm
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-

      - name: Clean dependencies and cache
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force
          rm -rf ~/.npm

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --force
          
      - name: Remove problematic packages
        run: |
          npm uninstall oxc-parser || true
          
      - name: Install alternative parser
        run: |
          npm install @babel/parser --save-dev || true
          
      - name: Prepare Nuxt
        run: |
          npm run postinstall || npm run build:prepare || npx nuxt prepare

      - name: Build and generate static files
        run: |
          npm run generate
        env:
          NODE_ENV: production
          
      - name: Copy CNAME file
        run: cp CNAME .output/public/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.output/public

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4